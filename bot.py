import discord
from discord.ext import commands
import os
import asyncio
from dotenv import load_dotenv
from watchdog.observers import Observer

from commands_loader import load_prefix_commands, reload_slash_commands, CommandsReloadHandler

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")
OWNER_ID = int(os.getenv("OWNER_ID"))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True

bot = commands.Bot(command_prefix="!", intents=intents, help_command=None)

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user} (ID: {bot.user.id})")

    try:
        load_prefix_commands(bot)           # –ó–∞–≥—Ä—É–∑–∫–∞ prefix –∫–æ–º–∞–Ω–¥
        await reload_slash_commands(bot)    # –ó–∞–≥—Ä—É–∑–∫–∞ + —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è slash –∫–æ–º–∞–Ω–¥
    except Exception as e:
        print(f"‚ùå Error in initial load: {e}")

    # –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –ø–∞–ø–∫–∞—Ö
    loop = asyncio.get_event_loop()
    event_handler = CommandsReloadHandler(loop, bot)
    observer = Observer()
    observer.schedule(event_handler, path="Commands/slash", recursive=True)
    observer.schedule(event_handler, path="Commands/prefix", recursive=True)
    observer.start()

    print("üîÅ Watching for changes in command files...")

@bot.command()
@commands.is_owner()
async def reloadslash(ctx):
    await reload_slash_commands(bot)
    await ctx.send("üîÅ Slash commands globally reloaded.")

bot.run(TOKEN)
